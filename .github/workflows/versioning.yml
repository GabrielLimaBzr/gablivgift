name: Versioning and Deployment

on:
  push:
    branches:
      - main  # Aciona o workflow ao fazer push na branch main

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Clean working directory
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "chore: auto-commit build artifacts [skip ci]" || echo "No changes to commit"

      - name: Bump version
        id: bump-version
        run: |
          # Verifica o tipo de commit para decidir o tipo de versionamento
          if [[ "$(git log -1 --pretty=%B)" == *"feat:"* ]]; then
            npm run version:minor
          elif [[ "$(git log -1 --pretty=%B)" == *"fix:"* ]]; then
            npm run version:patch
          else
            echo "No version bump needed."
            exit 0
          fi

          # Obtém a nova versão
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"

          # Cria uma tag Git
          git tag v$NEW_VERSION
          git push origin v$NEW_VERSION

          # Atualiza a branch main com a nova versão
          git push origin main

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}  # Adicione seu token do Vercel nas secrets do GitHub
        run: |
          # Instala a CLI do Vercel
          npm install -g vercel

          # Faz o deploy
          vercel --prod --token $VERCEL_TOKEN --yes